{"version":3,"sources":["api/getKantoPokemon.js","components/List.js","components/PokemonFrame.js","components/PokemonAttributes.js","components/TextContainer.js","components/Details.js","components/App.js","index.js"],"names":["fetch","require","module","exports","getKantoPokemon","a","responses","i","push","Promise","all","res","map","response","json","data","List","props","handleClick","bind","event","this","getSelectedPokemon","target","value","className","pokemonList","pokemon","index","onClick","name","React","Component","PokemonFrame","image","activePokemon","sprites","versions","front_default","src","alt","PokemonAttributes","attributes","TextContainer","Details","Pokedex","App","state","setState","pokemonSelected","ReactDOM","render","document","getElementById"],"mappings":"oLAAMA,EAAQC,EAAQ,IAGtBC,EAAOC,QAAU,CAChBC,gBAAgB,WAAD,4BAAE,kCAAAC,EAAA,sDAGhB,IADIC,EAAY,GACPC,EAAI,EAAGA,GAAK,IAAKA,IACzBD,EAAUE,KAAKR,EAAM,qCAAD,OAAsCO,KAJ3C,gBAOAE,QAAQC,IAAIJ,GAPZ,cAOZK,EAPY,gBAYCF,QAAQC,IAAIC,EAAIC,KAAI,SAACC,GACrC,OAAOA,EAASC,WAbD,cAYZC,EAZY,yBAgBTA,GAhBS,2CAAF,kDAAC,K,kKC2BFC,E,kDA3Bd,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IACDC,YAAc,EAAKA,YAAYC,KAAjB,gBAFD,E,+CAKnB,SAAaC,GACZC,KAAKJ,MAAMK,mBAAmBF,EAAMG,OAAOC,S,oBAG5C,WAAW,IAAD,OACT,OACC,qBAAKC,UAAU,yBAAf,SACC,oBAAIA,UAAU,eAAd,SACEJ,KAAKJ,MAAMS,YAAYd,KAAI,SAACe,EAASC,GACrC,OACC,oBAAuBJ,MAAOI,EAAOC,QAAS,EAAKX,YAAnD,SACES,EAAQG,MADDH,EAAQG,iB,GAhBLC,IAAMC,WCsBVC,EApBM,SAAChB,GAErB,IAAMiB,EAAQjB,EAAMkB,cAAgBlB,EAAMkB,cAAcC,QAAQC,SAAS,kBAArC,QAAkEC,cAAgB,GAEtH,OACC,qBAAKb,UAAU,gBAAf,SACER,EAAMkB,cACN,qCACC,qBAAKV,UAAU,eAAf,SACC,6BAAKR,EAAMkB,cAAcL,SAE1B,qBAAKL,UAAU,gBAAf,SACC,qBAAKc,IAAKL,EAAOM,IAAKvB,EAAMkB,cAAcL,YAG1C,MCNSW,E,4JAXd,WAEC,IAAMC,EAAarB,KAAKJ,MAAMkB,cAAgBd,KAAKJ,MAAMkB,cAAcL,KAAO,UAC9E,OACC,qBAAML,UAAU,qBAAhB,SACEiB,Q,GAN2BX,IAAMC,WCWvBW,E,4JAVd,WAEC,OACC,qBAAKlB,UAAU,iBAAf,SAFY,uB,GAFaM,IAAMC,WCenBY,E,4JAXd,WACC,OACC,sBAAKnB,UAAU,kBAAf,UACC,cAAC,EAAD,CAAcU,cAAed,KAAKJ,MAAMkB,gBACxC,cAAC,EAAD,CAAmBA,cAAed,KAAKJ,MAAMkB,gBAC7C,cAAC,EAAD,CAAeA,cAAed,KAAKJ,MAAMkB,uB,GANvBJ,IAAMC,WCDtBa,G,MAAU5C,EAAQ,KA6BT6C,E,kDA3Bd,WAAY7B,GAAQ,IAAD,8BAClB,cAAMA,IACD8B,MAAQ,CAAErB,YAAa,GAAIS,cAAe,MAC/C,EAAKb,mBAAqB,EAAKA,mBAAmBH,KAAxB,gBAHR,E,4FAMnB,4BAAAd,EAAA,sEACiBwC,EAAQzC,kBADzB,OACKO,EADL,OAECU,KAAK2B,SAAS,CAAEtB,YAAaf,IAF9B,gD,sFAMA,SAAoBiB,GACnB,IAAMqB,EAAkB5B,KAAK0B,MAAMrB,YAAYE,GAC/CP,KAAK2B,SAAS,CAAEb,cAAec,M,oBAGhC,WACC,OACC,uBAAMxB,UAAU,YAAhB,UACC,cAAC,EAAD,CAAMC,YAAaL,KAAK0B,MAAMrB,YAAaJ,mBAAoBD,KAAKC,qBACpE,cAAC,EAAD,CAASa,cAAed,KAAK0B,MAAMZ,uB,GAtBrBJ,IAAMC,WCFxBkB,IAASC,OACR,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c89f378d.chunk.js","sourcesContent":["const fetch = require('node-fetch')\n\n//return all original 151 pokemon\nmodule.exports = {\n\tgetKantoPokemon: async () => {\n\t\t//create an array of promises to pass to PromiseAll\n\t\tlet responses = [];\n\t\tfor (let i = 1; i <= 151; i++) {\n\t\t\tresponses.push(fetch(`https://pokeapi.co/api/v2/pokemon/${i}`));\n\t\t}\n\t\t//wait until we get response from all of the responses\n\t\tlet res = await Promise.all(responses)\n\t\t//wait until all of the elements of res which is in array of response\n\t\t//objects is done using .json() which itself returns a promise, which\n\t\t//is why we need the promise.all again and store in new variable called\n\t\t//data\n\t\tlet data = await Promise.all(res.map((response) => {\n\t\t\treturn response.json();\n\t\t}))\n\n\t\treturn data\n\t}\n}\n","\nimport React from 'react'\n\nclass List extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.handleClick = this.handleClick.bind(this)\n\t}\n\n\thandleClick (event) {\n\t\tthis.props.getSelectedPokemon(event.target.value)\n\t}\n\n\trender () {\n\t\treturn (\n\t\t\t<div className=\"pokemon-list-container\" >\n\t\t\t\t<ul className=\"pokemon-list\">\n\t\t\t\t\t{this.props.pokemonList.map((pokemon, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={pokemon.name} value={index} onClick={this.handleClick}>\n\t\t\t\t\t\t\t\t{pokemon.name}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n\nexport default List\n","import React from 'react'\n\n//displays the Pokemon's Name as well as its image, might add motion and\n//ability to change generation so I think its a good idea to break into a new\n//component\nconst PokemonFrame = (props) => {\n\t//const image = props.activePokemon ? props.activePokemon.sprites.versions['generation-i']['red-blue'].front_default : ''\n\tconst image = props.activePokemon ? props.activePokemon.sprites.versions['generation-iii']['emerald'].front_default : ''\n\t//const image = props.activePokemon ? props.activePokemon.sprites.front_default : ''\n\treturn (\n\t\t<div className=\"pokemon-frame\">\n\t\t\t{props.activePokemon ?\n\t\t\t\t<>\n\t\t\t\t\t<div className=\"pokemon-name\">\n\t\t\t\t\t\t<h3>{props.activePokemon.name}</h3>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"pokemon-image\">\n\t\t\t\t\t\t<img src={image} alt={props.activePokemon.name}></img>\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t\t: ''}\n\t\t</div>\n\t)\n}\n\nexport default PokemonFrame\n","import React from 'react'\n\nclass PokemonAttributes extends React.Component {\n\trender () {\n\n\t\tconst attributes = this.props.activePokemon ? this.props.activePokemon.name : 'no name'\n\t\treturn (\n\t\t\t< div className=\"pokemon-attributes\" >\n\t\t\t\t{attributes}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default PokemonAttributes\n","import React from 'react'\n\nclass TextContainer extends React.Component {\n\trender () {\n\t\tconst temp = 'This is a test'\n\t\treturn (\n\t\t\t<div className=\"text-container\">\n\t\t\t\t{temp}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default TextContainer","import React from 'react'\nimport PokemonFrame from './PokemonFrame.js'\nimport PokemonAttributes from './PokemonAttributes.js'\nimport TextContainer from './TextContainer'\n\nclass Details extends React.Component {\n\trender () {\n\t\treturn (\n\t\t\t<div className=\"pokedex-details\">\n\t\t\t\t<PokemonFrame activePokemon={this.props.activePokemon} />\n\t\t\t\t<PokemonAttributes activePokemon={this.props.activePokemon} />\n\t\t\t\t<TextContainer activePokemon={this.props.activePokemon} />\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Details","import React from 'react'\nimport List from './List.js'\nimport Details from './Details.js'\nimport '../styles/layout.scss'\nconst Pokedex = require('../api/getKantoPokemon')\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = { pokemonList: [], activePokemon: null }\n\t\tthis.getSelectedPokemon = this.getSelectedPokemon.bind(this)\n\t}\n\n\tasync componentDidMount () {\n\t\tlet res = await Pokedex.getKantoPokemon()\n\t\tthis.setState({ pokemonList: res })\n\t\t//console.log(this.state.pokemonList)\n\t}\n\n\tgetSelectedPokemon (index) {\n\t\tconst pokemonSelected = this.state.pokemonList[index]\n\t\tthis.setState({ activePokemon: pokemonSelected })\n\t}\n\n\trender () {\n\t\treturn (\n\t\t\t<main className=\"container\">\n\t\t\t\t<List pokemonList={this.state.pokemonList} getSelectedPokemon={this.getSelectedPokemon} />\n\t\t\t\t<Details activePokemon={this.state.activePokemon} />\n\t\t\t</main>\n\t\t)\n\t}\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './components/App'\n\nReactDOM.render(\n\t<App />,\n\tdocument.getElementById('root')\n)"],"sourceRoot":""}