{"version":3,"sources":["components/List.js","components/PokemonFrame.js","components/PokemonAttributes.js","api/getFlavorText.js","components/TextContainer.js","components/PokemonStats.js","components/Details.js","api/getKantoPokemon.js","components/App.js","index.js"],"names":["List","props","handleClick","bind","event","this","getSelectedPokemon","target","value","className","pokemonList","map","pokemon","index","onClick","name","React","Component","PokemonFrame","image","activePokemon","sprites","front_default","src","alt","PokemonAttributes","pokedexEntry","game_indices","game_index","weightAndHeight","weight","height","types","item","type","abilities","ability","getFlavorText","a","speciesUrl","species","url","axios","get","res","data","text","flavor_text_entries","find","element","language","flavor_text","TextContainer","state","flavorText","prevProps","prevState","results","setState","PokemonStats","stats","length","stat","base_stat","Details","fetch","require","getKantoPokemon","responses","i","push","Promise","all","response","json","App","pokemonSelected","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e95168b.chunk.js","sourcesContent":["\nimport React from 'react'\n\nclass List extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.handleClick = this.handleClick.bind(this)\n\t}\n\n\thandleClick (event) {\n\t\tthis.props.getSelectedPokemon(event.target.value)\n\t}\n\n\trender () {\n\t\treturn (\n\t\t\t<div className=\"pokemon-list-container\" >\n\t\t\t\t<ul className=\"pokemon-list\">\n\t\t\t\t\t{this.props.pokemonList.map((pokemon, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={pokemon.name} value={index} onClick={this.handleClick}>\n\t\t\t\t\t\t\t\t{pokemon.name}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n\nexport default List\n","import React from 'react'\n\n//displays the Pokemon's Name as well as its image, might add motion and\n//ability to change generation so I think its a good idea to break into a new\n//component\nconst PokemonFrame = (props) => {\n\t//const image = props.activePokemon ? props.activePokemon.sprites.versions['generation-i']['red-blue'].front_default : ''\n\t//const image = props.activePokemon ? props.activePokemon.sprites.versions['generation-iii']['emerald'].front_default : ''\n\t//const image = props.activePokemon ? props.activePokemon.sprites.versions['generation-ii']['crystal'].front_default : ''\n\tconst image = props.activePokemon ? props.activePokemon.sprites.front_default : ''\n\treturn (\n\t\t<div className=\"pokemon-frame\">\n\t\t\t{props.activePokemon ?\n\t\t\t\t<>\n\t\t\t\t\t<div className=\"pokemon-name\">\n\t\t\t\t\t\t<h3>{props.activePokemon.name}</h3>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"pokemon-image\">\n\t\t\t\t\t\t<img src={image} alt={props.activePokemon.name}></img>\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t\t: ''}\n\t\t</div>\n\t)\n}\n\nexport default PokemonFrame\n","import React from 'react'\n\nclass PokemonAttributes extends React.Component {\n\n\trender () {\n\t\tconst activePokemon = this.props.activePokemon ? this.props.activePokemon : null\n\n\t\tconst pokedexEntry = activePokemon ? (\n\t\t\t<div className=\"pokedex-entry\">\n\t\t\t\t<span className=\"attribute-title\">No: </span> <span>{activePokemon.game_indices[9].game_index}</span>\n\t\t\t</div>\n\t\t) : null\n\n\t\tconst weightAndHeight = activePokemon ? (\n\t\t\t<div className=\"pokemon-w-t\">\n\t\t\t\t<span>\n\t\t\t\t\tWeight: {(activePokemon.weight) / 10} kg\n\t\t\t\t</span>\n\t\t\t\t<span >\n\t\t\t\t\tHeight: {(activePokemon.height) / 10} m\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t) : null\n\n\t\tconst types = activePokemon ? activePokemon.types.map((item, index) => {\n\t\t\treturn (\n\t\t\t\t<div key={index} className={`${item.type.name}`} >\n\t\t\t\t\t{item.type.name}\n\t\t\t\t</div>\n\t\t\t)\n\t\t}) : null\n\n\t\tconst abilities = activePokemon ? activePokemon.abilities.map((item, index) => {\n\t\t\treturn (\n\t\t\t\t<span key={index} className=\"pokemon-ability\">\n\t\t\t\t\t{item.ability.name}\n\t\t\t\t</span>\n\t\t\t)\n\t\t}) : null\n\n\t\treturn (\n\t\t\t< div className=\"pokemon-attributes\" >\n\t\t\t\t{pokedexEntry}\n\t\t\t\t<div className=\"pokemon-types\">\n\t\t\t\t\t<span className=\"attribute-title\">Types: </span>\n\t\t\t\t\t{types}\n\t\t\t\t</div>\n\t\t\t\t{weightAndHeight}\n\t\t\t\t<div className=\"pokemon-abilities\">\n\t\t\t\t\t<span className=\"attribute-title\">Pokemon Abilities:</span> {abilities}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default PokemonAttributes\n","import axios from 'axios'\n\nexport const getFlavorText = async (activePokemon) => {\n\tconst speciesUrl = activePokemon.species.url\n\n\tconst res = await axios.get(speciesUrl)\n\n\tconst data = res.data\n\n\tconst text = data.flavor_text_entries.find(element => {\n\t\treturn element.language.name === 'en'\n\t})\n\t\n\treturn text.flavor_text\n}\n\nexport default getFlavorText","import React from 'react'\nimport { getFlavorText } from '../api/getFlavorText'\nclass TextContainer extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tflavorText: ''\n\t\t}\n\t}\n\n\tasync componentDidUpdate (prevProps, prevState) {\n\t\tif (prevState !== this.props.activePokemon && this.props.activePokemon !== null) {\n\t\t\tlet results = await getFlavorText(this.props.activePokemon)\n\t\t\tthis.setState({ flavorText: results })\n\t\t}\n\t}\n\trender () {\n\n\t\treturn (\n\t\t\t<div className=\"text-container\">\n\n\t\t\t\t{this.state.flavorText}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default TextContainer","import React from 'react'\n\nconst PokemonStats = (props) => {\n\tconst activePokemon = props.activePokemon ? props.activePokemon.stats : null\n\t\n\t//return array of stats if we have an active pokemon\n\tconst stats = activePokemon ? activePokemon.length > 0 && activePokemon.map((item, index) => {\n\t\treturn (\n\t\t\t<div className={`stats ${item.stat.name}`} key={index}>\n\t\t\t\t<span>{item.stat.name}:</span>\n\t\t\t\t<span>{item.base_stat}</span>\n\t\t\t</div>)\n\t}) : ''\n\n\treturn (\n\t\t<div className=\"pokemon-stats\">\n\t\t\t{stats}\n\t\t</div>\n\t)\n}\n\nexport default PokemonStats\n","import React from 'react'\nimport PokemonFrame from './PokemonFrame.js'\nimport PokemonAttributes from './PokemonAttributes.js'\nimport TextContainer from './TextContainer'\nimport PokemonStats from './PokemonStats.js'\n\nclass Details extends React.Component {\n\trender () {\n\t\treturn (\n\t\t\t<div className=\"pokedex-details\">\n\t\t\t\t<PokemonFrame activePokemon={this.props.activePokemon} />\n\t\t\t\t<PokemonAttributes activePokemon={this.props.activePokemon} />\n\t\t\t\t<TextContainer activePokemon={this.props.activePokemon} />\n\t\t\t\t<PokemonStats activePokemon={this.props.activePokemon} />\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Details","const fetch = require('node-fetch')\n\n\n\t//return all original 151 pokemon\nexport const getKantoPokemon =  async () => {\n\t\t//create an array of promises to pass to PromiseAll\n\t\tlet responses = [];\n\t\tfor (let i = 1; i <= 151; i++) {\n\t\t\tresponses.push(fetch(`https://pokeapi.co/api/v2/pokemon/${i}/`));\n\t\t}\n\t\t//wait until we get response from all of the responses\n\t\tlet res = await Promise.all(responses)\n\t\t//wait until all of the elements of res which is in array of response\n\t\t//objects is done using .json() which itself returns a promise, which\n\t\t//is why we need the promise.all again and store in new variable called\n\t\t//data\n\t\tlet data = await Promise.all(res.map((response) => {\n\t\t\treturn response.json();\n\t\t}))\n\n\t\treturn data\n\t}\n\n\nexport default getKantoPokemon\n\n","import React from 'react'\nimport List from './List.js'\nimport Details from './Details.js'\nimport '../styles/layout.scss'\nimport { getKantoPokemon } from '../api/getKantoPokemon'\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = { pokemonList: [], activePokemon: null }\n\t\tthis.getSelectedPokemon = this.getSelectedPokemon.bind(this)\n\t}\n\n\tasync componentDidMount () {\n\t\tlet res = await getKantoPokemon()\n\t\tthis.setState({ pokemonList: res })\n\t\t//console.log(this.state.pokemonList)\n\t}\n\n\tgetSelectedPokemon (index) {\n\t\tconst pokemonSelected = this.state.pokemonList[index]\n\t\tthis.setState({ activePokemon: pokemonSelected })\n\t}\n\n\trender () {\n\t\treturn (\n\t\t\t<main className=\"container\">\n\t\t\t\t<List pokemonList={this.state.pokemonList} getSelectedPokemon={this.getSelectedPokemon} />\n\t\t\t\t<Details activePokemon={this.state.activePokemon} />\n\t\t\t</main>\n\t\t)\n\t}\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './components/App'\n\nReactDOM.render(\n\t<App />,\n\tdocument.getElementById('root')\n)"],"sourceRoot":""}